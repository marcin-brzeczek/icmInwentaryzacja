// Generated by paperparcel.PaperParcelProcessor (https://github.com/grandstaish/paperparcel).
package de.wasiakgruppe.ann.abstraction.domain;

import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.NonNull;
import paperparcel.TypeAdapter;
import paperparcel.internal.EnumAdapter;

final class PaperParcelValueMeasure {
  static final TypeAdapter<MeasurementUnit> MEASUREMENT_UNIT_ENUM_ADAPTER =
      new EnumAdapter<MeasurementUnit>(MeasurementUnit.class);

  @NonNull
  static final Parcelable.Creator<ValueMeasure> CREATOR =
      new Parcelable.Creator<ValueMeasure>() {
        @Override
        public ValueMeasure createFromParcel(Parcel in) {
          float value = in.readFloat();
          MeasurementUnit unit =
              PaperParcelValueMeasure.MEASUREMENT_UNIT_ENUM_ADAPTER.readFromParcel(in);
          ValueMeasure data = new ValueMeasure(value, unit);
          return data;
        }

        @Override
        public ValueMeasure[] newArray(int size) {
          return new ValueMeasure[size];
        }
      };

  private PaperParcelValueMeasure() {}

  static void writeToParcel(@NonNull ValueMeasure data, @NonNull Parcel dest, int flags) {
    dest.writeFloat(data.getValue());
    PaperParcelValueMeasure.MEASUREMENT_UNIT_ENUM_ADAPTER.writeToParcel(
        data.getUnit(), dest, flags);
  }
}
